name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  # Label of the container job
  build:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that executes in
    container: node:14-alpine

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        redis-version: [4, 5, 6]

    # Service containers to run with
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: ${{ matrix.redis-version }}

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm ci

      # Install psql tool
      # psql not provided in image from the box
      - run: apk add --no-cache postgresql-client

      # Set up DB
      - name: Create new postgres user & new db for him
        run: PGPASSWORD=postgres psql -h postgres -U postgres -f application/db/install.sql

      - name: Setup the database schema
        run: PGPASSWORD=marcus   psql -h postgres -d application -U marcus -f application/db/structure.sql

      - name: Fill db with data
        run: PGPASSWORD=marcus   psql -h postgres -d application -U marcus -f application/db/data.sql

      - name: Run tests
        run: npm test
